# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Translate.V3beta1.Model.BatchTranslateTextRequest do
  @moduledoc """
  The batch translation request.

  ## Attributes
  
  *   `glossaries` (*type:* `%{optional(String.t) => GoogleApi.Translate.V3beta1.Model.TranslateTextGlossaryConfig.t}`, *default:* `nil`) - Optional. Glossaries to be applied for translation.
      It's keyed by target language code.
  *   `inputConfigs` (*type:* `list(GoogleApi.Translate.V3beta1.Model.InputConfig.t)`, *default:* `nil`) - Required. Input configurations.
      The total number of files matched should be <= 1000.
      The total content size should be <= 100M Unicode codepoints.
      The files must use UTF-8 encoding.
  *   `labels` (*type:* `map()`, *default:* `nil`) - Optional. The labels with user-defined metadata for the request.

      Label keys and values can be no longer than 63 characters
      (Unicode codepoints), can only contain lowercase letters, numeric
      characters, underscores and dashes. International characters are allowed.
      Label values are optional. Label keys must start with a letter.

      See https://goo.gl/xmQnxf for more information on and examples of labels.
  *   `models` (*type:* `map()`, *default:* `nil`) - Optional. The models to use for translation. Map's key is target language
      code. Map's value is model name. Value can be a built-in general model,
      or an AutoML Translation model.

      The value format depends on model type:

      - AutoML Translation models:
        `projects/{project-id}/locations/{location-id}/models/{model-id}`

      - General (built-in) models:
        `projects/{project-id}/locations/{location-id}/models/general/nmt`,
        `projects/{project-id}/locations/{location-id}/models/general/base`


      If the map is empty or a specific model is
      not requested for a language pair, then default google model (nmt) is used.
  *   `outputConfig` (*type:* `GoogleApi.Translate.V3beta1.Model.OutputConfig.t`, *default:* `nil`) - Required. Output configuration.
      If 2 input configs match to the same file (that is, same input path),
      we don't generate output for duplicate inputs.
  *   `sourceLanguageCode` (*type:* `String.t`, *default:* `nil`) - Required. Source language code.
  *   `targetLanguageCodes` (*type:* `list(String.t)`, *default:* `nil`) - Required. Specify up to 10 language codes here.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
    
      :"glossaries" => %{optional(String.t) => GoogleApi.Translate.V3beta1.Model.TranslateTextGlossaryConfig.t},
    
      :"inputConfigs" => list(GoogleApi.Translate.V3beta1.Model.InputConfig.t),
    
      :"labels" => map(),
    
      :"models" => map(),
    
      :"outputConfig" => GoogleApi.Translate.V3beta1.Model.OutputConfig.t,
    
      :"sourceLanguageCode" => String.t,
    
      :"targetLanguageCodes" => list(String.t),
    
  }
  
  field(:"glossaries", as: GoogleApi.Translate.V3beta1.Model.TranslateTextGlossaryConfig, type: :map)
  field(:"inputConfigs", as: GoogleApi.Translate.V3beta1.Model.InputConfig, type: :list)
  field(:"labels", type: :map)
  field(:"models", type: :map)
  field(:"outputConfig", as: GoogleApi.Translate.V3beta1.Model.OutputConfig)
  field(:"sourceLanguageCode")
  field(:"targetLanguageCodes", type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Translate.V3beta1.Model.BatchTranslateTextRequest do
  def decode(value, options) do
    GoogleApi.Translate.V3beta1.Model.BatchTranslateTextRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Translate.V3beta1.Model.BatchTranslateTextRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end

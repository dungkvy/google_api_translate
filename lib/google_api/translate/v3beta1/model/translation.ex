# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Translate.V3beta1.Model.Translation do
  @moduledoc """
  A single translation response.

  ## Attributes
  
  *   `detectedLanguageCode` (*type:* `String.t`, *default:* `nil`) - The BCP-47 language code of source text in the initial request, detected
      automatically, if no source language was passed within the initial
      request. If the source language was passed, auto-detection of the language
      does not occur and this field is empty.
  *   `glossaryConfig` (*type:* `GoogleApi.Translate.V3beta1.Model.TranslateTextGlossaryConfig.t`, *default:* `nil`) - The `glossary_config` used for this translation.
  *   `model` (*type:* `String.t`, *default:* `nil`) - Only present when `model` is present in the request.
      This is same as `model` provided in the request.
  *   `translatedText` (*type:* `String.t`, *default:* `nil`) - Text translated into the target language.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
    
      :"detectedLanguageCode" => String.t,
    
      :"glossaryConfig" => GoogleApi.Translate.V3beta1.Model.TranslateTextGlossaryConfig.t,
    
      :"model" => String.t,
    
      :"translatedText" => String.t,
    
  }
  
  field(:"detectedLanguageCode")
  field(:"glossaryConfig", as: GoogleApi.Translate.V3beta1.Model.TranslateTextGlossaryConfig)
  field(:"model")
  field(:"translatedText")
end

defimpl Poison.Decoder, for: GoogleApi.Translate.V3beta1.Model.Translation do
  def decode(value, options) do
    GoogleApi.Translate.V3beta1.Model.Translation.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Translate.V3beta1.Model.Translation do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end

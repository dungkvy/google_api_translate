# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Translate.V3beta1.Model.TranslateTextRequest do
  @moduledoc """
  The request message for synchronous translation.

  ## Attributes
  
  *   `contents` (*type:* `list(String.t)`, *default:* `nil`) - Required. The content of the input in string format.
      We recommend the total content be less than 30k codepoints.
      Use BatchTranslateText for larger text.
  *   `glossaryConfig` (*type:* `GoogleApi.Translate.V3beta1.Model.TranslateTextGlossaryConfig.t`, *default:* `nil`) - Optional. Glossary to be applied. The glossary must be
      within the same region (have the same location-id) as the model, otherwise
      an INVALID_ARGUMENT (400) error is returned.
  *   `labels` (*type:* `map()`, *default:* `nil`) - Optional. The labels with user-defined metadata for the request.

      Label keys and values can be no longer than 63 characters
      (Unicode codepoints), can only contain lowercase letters, numeric
      characters, underscores and dashes. International characters are allowed.
      Label values are optional. Label keys must start with a letter.

      See https://goo.gl/xmQnxf for more information on and examples of labels.
  *   `mimeType` (*type:* `String.t`, *default:* `nil`) - Optional. The format of the source text, for example, "text/html",
       "text/plain". If left blank, the MIME type defaults to "text/html".
  *   `model` (*type:* `String.t`, *default:* `nil`) - Optional. The `model` type requested for this translation.

      The format depends on model type:

      - AutoML Translation models:
        `projects/{project-id}/locations/{location-id}/models/{model-id}`

      - General (built-in) models:
        `projects/{project-id}/locations/{location-id}/models/general/nmt`,
        `projects/{project-id}/locations/{location-id}/models/general/base`


      For global (non-regionalized) requests, use `location-id` `global`.
      For example,
      `projects/{project-id}/locations/global/models/general/nmt`.

      If missing, the system decides which google base model to use.
  *   `sourceLanguageCode` (*type:* `String.t`, *default:* `nil`) - Optional. The BCP-47 language code of the input text if
      known, for example, "en-US" or "sr-Latn". Supported language codes are
      listed in Language Support. If the source language isn't specified, the API
      attempts to identify the source language automatically and returns the
      source language within the response.
  *   `targetLanguageCode` (*type:* `String.t`, *default:* `nil`) - Required. The BCP-47 language code to use for translation of the input
      text, set to one of the language codes listed in Language Support.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
    
      :"contents" => list(String.t),
    
      :"glossaryConfig" => GoogleApi.Translate.V3beta1.Model.TranslateTextGlossaryConfig.t,
    
      :"labels" => map(),
    
      :"mimeType" => String.t,
    
      :"model" => String.t,
    
      :"sourceLanguageCode" => String.t,
    
      :"targetLanguageCode" => String.t,
    
  }
  
  field(:"contents", type: :list)
  field(:"glossaryConfig", as: GoogleApi.Translate.V3beta1.Model.TranslateTextGlossaryConfig)
  field(:"labels", type: :map)
  field(:"mimeType")
  field(:"model")
  field(:"sourceLanguageCode")
  field(:"targetLanguageCode")
end

defimpl Poison.Decoder, for: GoogleApi.Translate.V3beta1.Model.TranslateTextRequest do
  def decode(value, options) do
    GoogleApi.Translate.V3beta1.Model.TranslateTextRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Translate.V3beta1.Model.TranslateTextRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
